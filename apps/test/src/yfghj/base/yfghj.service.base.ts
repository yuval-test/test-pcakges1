/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Yfghj as PrismaYfghj } from "@prisma/client";

export class YfghjServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.YfghjCountArgs, "select">): Promise<number> {
    return this.prisma.yfghj.count(args);
  }

  async yfghjs(args: Prisma.YfghjFindManyArgs): Promise<PrismaYfghj[]> {
    return this.prisma.yfghj.findMany(args);
  }
  async yfghj(args: Prisma.YfghjFindUniqueArgs): Promise<PrismaYfghj | null> {
    return this.prisma.yfghj.findUnique(args);
  }
  async createYfghj(args: Prisma.YfghjCreateArgs): Promise<PrismaYfghj> {
    return this.prisma.yfghj.create(args);
  }
  async updateYfghj(args: Prisma.YfghjUpdateArgs): Promise<PrismaYfghj> {
    return this.prisma.yfghj.update(args);
  }
  async deleteYfghj(args: Prisma.YfghjDeleteArgs): Promise<PrismaYfghj> {
    return this.prisma.yfghj.delete(args);
  }
}
